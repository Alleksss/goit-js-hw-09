{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA0BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAjCAO,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACN,MAAQX,MAAAY,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,OAAOC,SACvCC,EAAaC,SAASN,EAAMO,MAAO,IACnCC,EAAYF,SAASL,EAAKM,MAAO,IACjCE,EAAiBH,SAASJ,EAAOK,MAAO,IAE9C,IAAK,IAAIG,EAAI,EAAGA,GAAKD,EAAgBC,IAAK,CAIxCxB,EAHiBwB,EACIL,GAAcK,EAAI,GAAKF,GAGzCG,MAAK,EAACxB,SAAEA,EAAQC,MAAEA,MACjBwB,EAAA5B,GAAS6B,OAAOC,QAAQ,qBAAqB3B,QAAeC,MAAU,IAEvE2B,OAAM,EAAC5B,SAAEA,EAAQC,MAAEA,MAClBwB,EAAA5B,GAAS6B,OAAOG,QAAQ,oBAAoB7B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix/build/notiflix-notify-aio'; \n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.target.elements;\n  const firstDelay = parseInt(delay.value, 10);\n  const delayStep = parseInt(step.value, 10);\n  const promisesAmount = parseInt(amount.value, 10);\n\n  for (let i = 1; i <= promisesAmount; i++) {\n    const position = i;\n    const currentDelay = firstDelay + (i - 1) * delayStep;\n\n    createPromise(position, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  };\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","delay1","step","amount","target","elements","firstDelay","parseInt","value","delayStep","promisesAmount","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.48834a19.js.map"}