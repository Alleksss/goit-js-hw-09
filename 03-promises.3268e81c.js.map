{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA0BA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAjCMO,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAMN,IALA,IAAgCC,EAAAF,EAAMG,OAAOC,SAArCC,EAAwBH,EAAxBZ,MAAOgB,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACfC,EAAaC,SAASJ,EAAMK,MAAO,IACnCC,EAAYF,SAASH,EAAKI,MAAO,IACjCE,EAAiBH,SAASF,EAAOG,MAAO,IAErCG,EAAI,EAAGA,GAAKD,EAAgBC,IAAK,CAIxCzB,EAHiByB,EACIL,GAAcK,EAAI,GAAKF,GAGzCG,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACjB0B,EAAA9B,GAAS+B,OAAOC,QAAQ,qBAAoCC,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M,IAEnE8B,OAAM,SAAAL,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MAClB0B,EAAA9B,GAAS+B,OAAOI,QAAQ,oBAAmCF,OAAf9B,EAAS,QAAY8B,OAAN7B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix/build/notiflix-notify-aio'; \n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.target.elements;\n  const firstDelay = parseInt(delay.value, 10);\n  const delayStep = parseInt(step.value, 10);\n  const promisesAmount = parseInt(amount.value, 10);\n\n  for (let i = 1; i <= promisesAmount; i++) {\n    const position = i;\n    const currentDelay = firstDelay + (i - 1) * delayStep;\n\n    createPromise(position, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  };\n};\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","_elements","target","elements","delay1","step","amount","firstDelay","parseInt","value","delayStep","promisesAmount","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.3268e81c.js.map"}